import caldav
from notion_client import Client
from datetime import datetime, timedelta
import pytz
import time
from dateutil import parser
from icalendar import Event, Calendar
import os
from dotenv import load_dotenv

load_dotenv()


notion_token = os.getenv("NOTION_TOKEN")
database_id = os.getenv("DATABASE_ID")
apple_id = os.getenv("APPLE_ID")
app_password = os.getenv("APPLE_PASSWORD")

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–õ–ò–ï–ù–¢–û–í ---
notion = Client(auth=notion_token)
url = "https://caldav.icloud.com/"
client = caldav.DAVClient(url, username=apple_id, password=app_password)
principal = client.principal()
calendars = principal.calendars()

calendar = None
for cal in calendars:
    if cal.name == "Tasks":
        calendar = cal
        break

if not calendar:
    print("‚ö†Ô∏è –ö–∞–ª–µ–Ω–¥–∞—Ä—å 'Tasks' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    exit()

# --- –ü–û–õ–£–ß–ï–ù–ò–ï –£–ñ–ï –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –°–û–ë–´–¢–ò–ô ---


def get_existing_events():
    events = []
    for event in calendar.events():
        try:
            events.append(event.instance.vevent.summary.value)
        except:
            continue
    return events

# --- –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–ê–õ–ï–ù–î–ê–†–Ø ---


def update_calendar():
    try:
        existing_events = get_existing_events()
        response = notion.databases.query(database_id=database_id)

        for page in response["results"]:
            # –ù–∞–∑–≤–∞–Ω–∏–µ
            name_property = page["properties"].get("Name", {}).get("title", [])
            if not name_property:
                continue
            event_title = name_property[0]["text"]["content"]

            # –î–∞—Ç–∞
            date_property = page["properties"].get(
                "Date", {}).get("date", None)
            if not date_property or not date_property.get("start"):
                print(f"‚ö†Ô∏è –£ —Å–æ–±—ã—Ç–∏—è '{event_title}' –Ω–µ—Ç –¥–∞—Ç—ã.")
                continue

            date_str = date_property["start"]
            is_all_day = 'T' not in date_str

            page_id = page['id'].replace('-', '')
            notion_url = f"https://www.notion.so/{page_id}"

            print(notion_url)

            if event_title in existing_events:
                continue  # –¢–∏—Ö–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –Ω–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å

            cal = Calendar()
            vevent = Event()
            vevent.add("summary", event_title)

            if is_all_day:
                start = parser.parse(date_str).date()
                end = start + timedelta(days=1)
                vevent.add("dtstart", start)
                vevent.add("dtend", end)
                vevent.add('url', notion_url)
                print(
                    f"üìÖ –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è all-day —Å–æ–±—ã—Ç–∏–µ '{event_title}' –Ω–∞ {start}")
            else:
                start = parser.isoparse(date_str)
                end = start + timedelta(hours=1)
                start = start.astimezone(pytz.utc)
                end = end.astimezone(pytz.utc)
                vevent.add("dtstart", start)
                vevent.add("dtend", end)
                vevent.add('url', notion_url)

                print(
                    f"üïí –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ '{event_title}' —Å {start} –¥–æ {end}")

            cal.add_component(vevent)
            calendar.add_event(cal.to_ical())
            print(f"‚úÖ –°–æ–±—ã—Ç–∏–µ '{event_title}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ iCloud.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è: {str(e)}")


# --- –ë–ï–°–ö–û–ù–ï–ß–ù–´–ô –¶–ò–ö–õ ---
while True:
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...")
    update_calendar()
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 0.3 –º–∏–Ω—É—Ç...")
    time.sleep(30)
